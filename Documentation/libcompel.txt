libcompel(1)
============
:doctype:       manpage
:man source:    libcompel
:man version:   0.0.1
:man manual:    libcompel manual

NAME
----
libcompel - library to execute a code provided in a binary blob.

DESCRIPTION
-----------
*libcompel* is a library to execute a binary blob in another process address space.

INTERFACE
---------
*void libcompel_version*(*unsigned int* \*'major', *unsigned int* \*'minor', *unsigned int* *'sublevel')::
    This function returns 'major', 'minor' and 'sublevel' version of the library.

*int libcompel_exec*(*pid_t* 'pid', *char* \*'path', *void* \*'arg_p', *unsigned int* 'arg_s')::
    This function runs the compel file 'path' (packed with compel tool) in the
    address space of a process 'pid'. The 'arg_p' and 'arg_s' are pointer to
    binary data and their size, that will be available in the parasitic code's
    main function. The execution of the parasite code starts with the function

-----------------------------------------------------------------
int main(void *arg_p, unsigned int arg_s);
-----------------------------------------------------------------

    The function returns after the parasite code's main finishes.

*parasite_exec_handle_t libcompel_exec_start*(*pid_t* 'pid', *char* \*'path', *void* \*'arg_p', *unsigned int* 'arg_s')::
    This function starts the compel file, but returns immediatelly after parasite
    starts executing. To wait for it to finish and unload use the next function.

*int libcompel_exec_end*(parasite_exec_handle_t h)::
    This one waits for parasite termination and unloads it. Return value of the
    parasite is reported back.

AUTHOR
------
OpenVZ team.

COPYING
-------
Copyright \(C) 2013-2014, Parallels Inc.
